// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Feedback {
  id            String    @id @default(uuid())
  title         String
  category      Category
  status        Status    @default(suggestion)
  description   String
  upvotesCount  Int       @default(0)
  commentsCount Int       @default(0)
  comments      Comment[]
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  upvotes       UpVote[]
}

model Comment {
  id         String   @id @default(uuid())
  content    String
  feedback   Feedback @relation(fields: [feedbackId], references: [id])
  feedbackId String
  user       User     @relation(fields: [username], references: [username])
  username   String
  replies    Reply[]
}

model Reply {
  id         String  @id @default(uuid())
  content    String
  replyingTo User    @relation(fields: [userId], references: [id])
  Comment    Comment @relation(fields: [commentId], references: [id])
  commentId  String
  userId     String
}

model User {
  id       String     @id @default(uuid())
  name     String
  username String     @unique
  image    String
  comments Comment[]
  Feedback Feedback[]
  UpVotes  UpVote[]
  Reply    Reply[]
}

model UpVote {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  feedback   Feedback @relation(fields: [feedbackId], references: [id])
  userId     String
  feedbackId String
}

enum Category {
  ui
  ux
  enhancement
  bug
  feature
}

enum Status {
  suggestion
  planned
  inprogress
  live
}
